name: Create Release

on:
    push:
        branches:
            - main
            - feature/versioning

jobs:
    create-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '14'

            - name: Install dependencies
              run: npm install

            - name: Get latest version from CHANGELOG.md
              id: get_version
              run: echo "::set-output name=version::$(awk '/##/ {print $2}' CHANGELOG.md | head -n 1)"

            - name: Get release notes from CHANGELOG.md
              id: get_release_notes
              run: |
                  version="${{ steps.get_version.outputs.version }}"
                  release_notes=$(awk -v version="$version" '/## '"$version"'/,/^$/' CHANGELOG.md | tail -n +2 | sed '/^$/d')
                  echo "::set-output name=release_notes::$(echo "$release_notes" | awk '{$1=$1;print}')"

            - name: Check if release already exists
              id: check_release
              run: |
                  version="${{ steps.get_version.outputs.version }}"
                  if [[ $(gh release list | grep "$version") ]]; then
                    echo "Release $version already exists. Skipping release creation."
                    echo "::set-output name=release_exists::true"
                  else
                    echo "Release $version does not exist. Proceeding with release creation."
                    echo "::set-output name=release_exists::false"
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create GitHub release
              if: steps.check_release.outputs.release_exists == 'false'
              run: |
                  version="${{ steps.get_version.outputs.version }}"
                  release_notes="${{ steps.get_release_notes.outputs.release_notes }}"
                  gh release create "$version" -t "$version" -n "$release_notes"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
